{"ast":null,"code":"var _jsxFileName = \"/Users/bastoche/Code/inato/junior-take-home-test/packages/app/src/ClinicalTrials.tsx\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = styled.div`\n  border-collapse: separate;\n  border-spacing: 0px 8px;\n  display: table;\n`;\n_c = Table;\nconst Header = styled.div`\n  display: table-header-group;\n`;\n_c2 = Header;\nconst Body = styled.div`\n  display: table-row-group;\n`;\n_c3 = Body;\nconst Row = styled.div`\n  display: table-row;\n`;\n_c4 = Row;\nconst HeaderCell = styled.div`\n  display: table-cell;\n  padding: 8px 32px;\n  border-radius: 4px;\n`;\n_c5 = HeaderCell;\nconst ClickableHeaderCell = styled(HeaderCell)`\n  cursor: pointer;\n  &:hover {\n    background-color: #b5b6ba;\n  }\n`;\n_c6 = ClickableHeaderCell;\nconst Cell = styled.div`\n  --border-color: #eaedf1;\n  display: table-cell;\n  vertical-align: middle;\n  padding: 16px 32px;\n  background: #ffffff;\n  border-width: 1px;\n  border-style: solid none;\n  border-color: var(--border-color);\n  &:first-child {\n    border-left: 1px solid var(--border-color);\n    border-radius: 4px 0 0 4px;\n  }\n  &:last-child {\n    border-right: 1px solid var(--border-color);\n    border-radius: 0 4px 4px 0;\n  }\n`;\n_c7 = Cell;\nconst ClinicalTrials = _ref => {\n  _s();\n  let {\n    clinicalTrials,\n    patientsSortDirection,\n    setPatientsSortDirection\n  } = _ref;\n  const togglePatientsSortDirection = useCallback(() => {\n    if (patientsSortDirection == null) {\n      setPatientsSortDirection(\"asc\");\n    } else if (patientsSortDirection === \"asc\") {\n      setPatientsSortDirection(\"desc\");\n    } else {\n      setPatientsSortDirection(null);\n    }\n  }, [patientsSortDirection, setPatientsSortDirection]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Clinical trials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n          children: \"site\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n          children: \"country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ClickableHeaderCell, {\n          onClick: togglePatientsSortDirection,\n          children: [\"patients\", sortDirectionIndicator(patientsSortDirection)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Body, {\n        children: clinicalTrials.map(clinicalTrial => /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Cell, {\n            children: clinicalTrial.site\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            children: clinicalTrial.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            children: clinicalTrial.patients\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, clinicalTrial.site, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(ClinicalTrials, \"Jjx3hUEMOdnZ9go5pJ89gNdNEDs=\");\n_c8 = ClinicalTrials;\nconst sortDirectionIndicator = patientsSortDirection => {\n  if (patientsSortDirection === \"asc\") return \"↑\";\n  if (patientsSortDirection === \"desc\") return \"↓\";\n  return \"\";\n};\nexport default ClinicalTrials;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Body\");\n$RefreshReg$(_c4, \"Row\");\n$RefreshReg$(_c5, \"HeaderCell\");\n$RefreshReg$(_c6, \"ClickableHeaderCell\");\n$RefreshReg$(_c7, \"Cell\");\n$RefreshReg$(_c8, \"ClinicalTrials\");","map":{"version":3,"names":["React","Fragment","useCallback","styled","jsxDEV","_jsxDEV","Table","div","_c","Header","_c2","Body","_c3","Row","_c4","HeaderCell","_c5","ClickableHeaderCell","_c6","Cell","_c7","ClinicalTrials","_ref","_s","clinicalTrials","patientsSortDirection","setPatientsSortDirection","togglePatientsSortDirection","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sortDirectionIndicator","map","clinicalTrial","site","country","patients","_c8","$RefreshReg$"],"sources":["/Users/bastoche/Code/inato/junior-take-home-test/packages/app/src/ClinicalTrials.tsx"],"sourcesContent":["import React, { Fragment, useCallback } from \"react\";\nimport styled from \"styled-components\";\n\nconst Table = styled.div`\n  border-collapse: separate;\n  border-spacing: 0px 8px;\n  display: table;\n`;\n\nconst Header = styled.div`\n  display: table-header-group;\n`;\n\nconst Body = styled.div`\n  display: table-row-group;\n`;\n\nconst Row = styled.div`\n  display: table-row;\n`;\n\nconst HeaderCell = styled.div`\n  display: table-cell;\n  padding: 8px 32px;\n  border-radius: 4px;\n`;\n\nconst ClickableHeaderCell = styled(HeaderCell)`\n  cursor: pointer;\n  &:hover {\n    background-color: #b5b6ba;\n  }\n`;\n\nconst Cell = styled.div`\n  --border-color: #eaedf1;\n  display: table-cell;\n  vertical-align: middle;\n  padding: 16px 32px;\n  background: #ffffff;\n  border-width: 1px;\n  border-style: solid none;\n  border-color: var(--border-color);\n  &:first-child {\n    border-left: 1px solid var(--border-color);\n    border-radius: 4px 0 0 4px;\n  }\n  &:last-child {\n    border-right: 1px solid var(--border-color);\n    border-radius: 0 4px 4px 0;\n  }\n`;\n\nexport type PatientsSortDirection = \"asc\" | \"desc\" | null;\n\ninterface Props {\n  clinicalTrials: Array<any>;\n  patientsSortDirection: PatientsSortDirection;\n  setPatientsSortDirection: (\n    patientsSortDirection: PatientsSortDirection\n  ) => void;\n}\n\nconst ClinicalTrials: React.FC<Props> = ({\n  clinicalTrials,\n  patientsSortDirection,\n  setPatientsSortDirection,\n}: Props) => {\n  const togglePatientsSortDirection = useCallback(() => {\n    if (patientsSortDirection == null) {\n      setPatientsSortDirection(\"asc\");\n    } else if (patientsSortDirection === \"asc\") {\n      setPatientsSortDirection(\"desc\");\n    } else {\n      setPatientsSortDirection(null);\n    }\n  }, [patientsSortDirection, setPatientsSortDirection]);\n\n  return (\n    <Fragment>\n      <h1>Clinical trials</h1>\n      <Table>\n        <Header>\n          <HeaderCell>site</HeaderCell>\n          <HeaderCell>country</HeaderCell>\n          <ClickableHeaderCell onClick={togglePatientsSortDirection}>\n            patients{sortDirectionIndicator(patientsSortDirection)}\n          </ClickableHeaderCell>\n        </Header>\n        <Body>\n          {clinicalTrials.map((clinicalTrial) => (\n            <Row key={clinicalTrial.site}>\n              <Cell>{clinicalTrial.site}</Cell>\n              <Cell>{clinicalTrial.country}</Cell>\n              <Cell>{clinicalTrial.patients}</Cell>\n            </Row>\n          ))}\n        </Body>\n      </Table>\n    </Fragment>\n  );\n};\n\nconst sortDirectionIndicator = (\n  patientsSortDirection: PatientsSortDirection\n) => {\n  if (patientsSortDirection === \"asc\") return \"↑\";\n  if (patientsSortDirection === \"desc\") return \"↓\";\n  return \"\";\n};\n\nexport default ClinicalTrials;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}